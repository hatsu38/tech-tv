name: RSpec

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  rspec:
    name: RSpec
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      RAILS_ENV: test
      BUNDLE_PATH: ./vendor/bundle
      DATABASE_NAME: techtv_test
      DATABASE_USER: postgres
      DATABASE_PASSWORD: ""
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 5432
      TZ: Asia/Tokyo
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Ruby„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Database„ÅÆ„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó
        run: |
          bundle exec rails db:create db:schema:load --trace

      - name: RSpec„ÇíÂÆüË°å
        run: |
          bundle exec rspec --format documentation --force-color --backtrace

  test_slack_notification:
    name: „ÄêTest Result„ÄëSlack Notification by Github Actions
    runs-on: ubuntu-latest
    needs: RSpec
    env:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      SLACK_USERNAME: Github Actions Result
    steps:
      - name: Slack Notification on Success
        uses: rtCamp/action-slack-notify@v2
        if: success()
        env:
          SLACK_MESSAGE: Pass rubocop, rspec, brakeman
          SLACK_TITLE: Test Complete!üéâ‚ú®

      - name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@v2
        if: failure()
        env:
          SLACK_MESSAGE: Fail rubocop, rspec, brakeman
          SLACK_TITLE: Test Failure!üëæ
          SLACK_COLOR: "#dc3545"

  deploy_production:
    name: Heroku„Å´„Éá„Éó„É≠„Ç§
    needs: RSpec
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Deploy to Heroku Production
        uses: akhileshns/heroku-deploy@v3.6.8
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}

  deploy_slack_notification:
    name: „ÄêDeploy Result„ÄëSlack Notification by Github Actions
    runs-on: ubuntu-latest
    needs: deploy_production
    env:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      SLACK_USERNAME: Github Actions Result
    steps:
      - name: „ÄêDeploy Result„ÄëSlack Notification on Success
        uses: rtCamp/action-slack-notify@v2
        if: success()
        env:
          SLACK_TITLE: Deploy Complete!üéâ‚ú®
          SLACK_MESSAGE: Heroku Deploy Success!
      - name: „ÄêDeploy Result„ÄëSlack Notification on Failure
        uses: rtCamp/action-slack-notify@v2
        if: failure()
        env:
          SLACK_TITLE: Deploy Failure!üëæ
          SLACK_MESSAGE: Heroku Deploy Fail!
          SLACK_COLOR: "#dc3545"